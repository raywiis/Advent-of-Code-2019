

fn main() {
    let input




        2201222102022220121020202021211001222120122102201102202212000202021101112202020200222221122202210122002022212112102202220212222121200002202202001211222012122012120221112121222022211210221121212200110122102220202111010220010201001201001100010120201012120201021020111021100120000200112010211101122001102102200110200200000121122212011022011112021022122210001101000112120101202";

    let width = 25;
    let height = 6;

    let mut pixel_count = 0;
    let mut layer_count = 0;
    let mut layers: Vec<Vec<u32>> = vec!();
    for c in input.chars() {
        if pixel_count == 0 {
            layers.push(Vec::new());
            layer_count += 1;
        }
        let layer = layers.last_mut().unwrap();
        layer.push(c.to_digit(10).expect("Not a number"));

        pixel_count += 1;
        pixel_count %= (width * height);
    }

    let mut min_0s = 10000;
    let mut min_0_idx = 0;

    for i in 0..layers.len() {
        let zero_count = layers[i].iter().filter(|x| **x == 0).count();

        if zero_count < min_0s {
            min_0s = zero_count;
            min_0_idx = i;
        }
    }

    let min_0_layer = &layers[min_0_idx];
    let count_2s = &min_0_layer.iter().filter(|x| **x == 2).count();
    let count_1s = &min_0_layer.iter().filter(|x| **x == 1).count();

    println!("result, {}", count_1s * count_2s);

    let image = render_image(layers);
    print_image(image, width);
}

fn render_image(layers: Vec<Vec<u32>>) -> Vec<u32> {
    let mut image: Vec<u32> = vec!();

    for _i in 0..layers[0].len() {
        image.push(2);
    }

    for layer in layers {
        for i in 0..layer.len() {
            if image[i] != 2 {
                continue;
            } else {
                image[i] = layer[i];
            }
        }
    }

    image
}

fn print_image(image: Vec<u32>, width: i32) {
    for i in 0..image.len() {
        if i % (width as usize) == 0 {
            print!("\n");
        }
        match image[i] {
            0 => print!(" "),
            1 => print!("#"),
            _ => panic!("Unexpected pixel value")
        }
    }
    print!("\n");
}
